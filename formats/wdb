#Format for Lego Island World Data Base file
@wdb
number_of_groups I

CHUNK groups number_of_groups
  size_of_group_title I
  group_title s size_of_group_title

  CHUNK subgroups 2
    num_sub_items I
    CHUNK sub_items num_sub_items
      size_of_sub_item_title I
      sub_item_title s size_of_sub_item_title
      size_of_item I
      item_offset I

      IF INDEX/subgroups 1
        size_of_presenter_title I
        presenter_title s size_of_presenter_title
        SKIP 37
      ENDIF
    END
  END
END

gif_chunk_size I

RETURN



@gifchunk
num_images I
CHUNK images num_images
  size_of_string I
  gif_name s size_of_string
  width I
  height I
  num_colors I

  CHUNK colors num_colors
    r B
    g B
    b B
  END

  CHUNK rows height
    CHUNK pixels width
      color_index B
    END
  END
END
RETURN




@gif
size_of_string I
gif_name s size_of_string
width I
height I
num_colors I

CHUNK colors num_colors
  r B
  g B
  b B
END

CHUNK rows height
  CHUNK pixels width
    color_index B
  END
END
RETURN



@model
magic_number I
bytes_left_in_subgroup I
version I
SKIP 8
size_of_file_name I
file_name s size_of_file_name

u1 I

CHUNK unknowns1 u1
  some_float1 f
  some_float2 f
  some_float3 f
  some_float4 f
END

u2 I

CHUNK unknowns2 u2
  some_int1 I
  some_int2 I
  some_int3 I
  some_int4 I
END

number_of_components I

CHUNK component_header number_of_components
  size_of_string I
  component_header_name s size_of_string

  num_things H
  CHUNK things num_things
    unknown1 H
    unknown2 H
    ufloat1 f
    ufloat2 f
    ufloat3 f
  END

  num_things2 H
  CHUNK things2 num_things2
    unknown1 H
    unknown2 H
    ufloat1 f
    ufloat2 f
    ufloat3 f
    ufloat4 f
  END

  num_things3 H
  num_things4 H

  some_int I
END


#COMPONENT
CHUNK components number_of_components+1
  size_of_string I
  component_name s size_of_string

  CHUNK random_floats2 10
    random_float2 f
  END

  SKIP 4
  defined_elsewhere B
  IF defined_elsewhere 1
    SKIP 4
    GOTO ENDCOMP
  ENDIF

  #number of lod models in this component
  number_of_models I

  IF number_of_models 0
    GOTO SKIPCOMPOFFSET
  ENDIF

  end_component_offset I
  MARKER SKIPCOMPOFFSET

  #this means lod, all models in a chunk are the same, just different poly
  CHUNK models number_of_models
    SKIP 4
    number_of_parts H
    SKIP 2
    number_of_verts H
    number_of_normals H
    number_of_coordinates H
    SKIP 2

    CHUNK vertices number_of_verts
      x f
      y f
      z f
    END

    CHUNK normals number_of_normals/2
      x f
      y f
      z f
    END

    CHUNK coordinates number_of_coordinates
      u f
      v f
    END

    CHUNK parts number_of_parts
      num_tris H
      num_index_definitions H

      CHUNK indices num_tris
        CHUNK axis 3
          first H
          second H
        END
      END

      num_coordinate_indices I

      CHUNK coordinate_indices num_coordinate_indices/3
        CHUNK axis 3
          coordinate_index I
        END
      END

      part_color_red B
      part_color_green B
      part_color_blue B
      SKIP 8
      size_of_texture_name I
      texture_name s size_of_texture_name
      size_of_material_name I
      material_name s size_of_material_name
    END
  END
  SKIP 4
  MARKER ENDCOMP
END

#MODELGIFS
num_images I
SKIP 4
CHUNK images num_images
  size_of_string I
  #store gif_char for later use, then go back and read entire gif_name
  gif_char B
  SEEKREL -1
  gif_name s size_of_string

  width I
  height I
  num_colors I

  CHUNK colors num_colors
    r B
    g B
    b B
  END

  CHUNK rows height
    CHUNK pixels width
      color_index B
    END
  END
  #for special textures beggining with "^"
  IF gif_char 94
    CHUNK extra_images 1
      width I
      height I
      num_colors I

      CHUNK colors num_colors
        r B
        g B
        b B
      END

      CHUNK rows height
        CHUNK pixels width
          color_index B
        END
      END
    END
  ENDIF
END
RETURN
